{
    "code-in-markdown": {
        "outdated-dir-check-fail": {
            "dir": "code-in-markdown",
            "exitCode": 1,
            "key": "outdated-dir-check-fail",
            "stderr": "    README-broken.md: NOT up to date\nCode in Markdown file(s) is out of date. Run without the \"check\" sub-command in order to update.\ncode-in-markdown failed.\n",
            "stdout": "Installing markdown-code-example-inserter@0.1.11...\nrunning code-in-markdown...\nnode_modules/.bin/md-code --check \"./**/*.md\"\nChecking that code in markdown is up to date:\n    README-fixed.md: up to date\n"
        },
        "up-to-date-single-file-check-pass": {
            "dir": "code-in-markdown",
            "exitCode": 0,
            "key": "up-to-date-single-file-check-pass",
            "stderr": "",
            "stdout": "Installing markdown-code-example-inserter@0.1.11...\nrunning code-in-markdown...\nnode_modules/.bin/md-code --check README-fixed.md\nChecking that code in markdown is up to date:\n    README-fixed.md: up to date\ncode-in-markdown succeeded.\n"
        },
        "outdated-single-file-check-fail": {
            "dir": "code-in-markdown",
            "exitCode": 1,
            "key": "outdated-single-file-check-fail",
            "stderr": "    README-broken.md: NOT up to date\nCode in Markdown file(s) is out of date. Run without the \"check\" sub-command in order to update.\ncode-in-markdown failed.\n",
            "stdout": "Installing markdown-code-example-inserter@0.1.11...\nrunning code-in-markdown...\nnode_modules/.bin/md-code --check README-broken.md\nChecking that code in markdown is up to date:\n"
        },
        "check should fail before running update": {
            "dir": "code-in-markdown",
            "exitCode": 1,
            "key": "check should fail before running update",
            "stderr": "    README-broken.md: NOT up to date\nCode in Markdown file(s) is out of date. Run without the \"check\" sub-command in order to update.\ncode-in-markdown failed.\n",
            "stdout": "Installing markdown-code-example-inserter@0.1.11...\nrunning code-in-markdown...\nnode_modules/.bin/md-code --check README-broken.md\nChecking that code in markdown is up to date:\n"
        },
        "update should pass": {
            "dir": "code-in-markdown",
            "exitCode": 0,
            "key": "update should pass",
            "stderr": "",
            "stdout": "Installing markdown-code-example-inserter@0.1.11...\nrunning code-in-markdown...\nnode_modules/.bin/md-code \"./**/*.md\"\nInserting code into markdown:\n    README-broken.md\n    README-fixed.md\ncode-in-markdown succeeded.\n"
        },
        "check should pass after update": {
            "dir": "code-in-markdown",
            "exitCode": 0,
            "key": "check should pass after update",
            "stderr": "",
            "stdout": "Installing markdown-code-example-inserter@0.1.11...\nrunning code-in-markdown...\nnode_modules/.bin/md-code --check \"./**/*.md\"\nChecking that code in markdown is up to date:\n    README-broken.md: up to date\n    README-fixed.md: up to date\ncode-in-markdown succeeded.\n"
        },
        "check should fail after reverting": {
            "dir": "code-in-markdown",
            "exitCode": 1,
            "key": "check should fail after reverting",
            "stderr": "    README-broken.md: NOT up to date\nCode in Markdown file(s) is out of date. Run without the \"check\" sub-command in order to update.\ncode-in-markdown failed.\n",
            "stdout": "Installing markdown-code-example-inserter@0.1.11...\nrunning code-in-markdown...\nnode_modules/.bin/md-code --check \"./**/*.md\"\nChecking that code in markdown is up to date:\n    README-fixed.md: up to date\n"
        },
        "check should fail before running single file update": {
            "dir": "code-in-markdown",
            "exitCode": 1,
            "key": "check should fail before running single file update",
            "stderr": "    README-broken.md: NOT up to date\nCode in Markdown file(s) is out of date. Run without the \"check\" sub-command in order to update.\ncode-in-markdown failed.\n",
            "stdout": "Installing markdown-code-example-inserter@0.1.11...\nrunning code-in-markdown...\nnode_modules/.bin/md-code --check \"./**/*.md\"\nChecking that code in markdown is up to date:\n    README-fixed.md: up to date\n"
        },
        "single file check should fail before running update": {
            "dir": "code-in-markdown",
            "exitCode": 1,
            "key": "single file check should fail before running update",
            "stderr": "    README-broken.md: NOT up to date\nCode in Markdown file(s) is out of date. Run without the \"check\" sub-command in order to update.\ncode-in-markdown failed.\n",
            "stdout": "Installing markdown-code-example-inserter@0.1.11...\nrunning code-in-markdown...\nnode_modules/.bin/md-code --check README-broken.md\nChecking that code in markdown is up to date:\n"
        },
        "single file update should pass": {
            "dir": "code-in-markdown",
            "exitCode": 0,
            "key": "single file update should pass",
            "stderr": "",
            "stdout": "Installing markdown-code-example-inserter@0.1.11...\nrunning code-in-markdown...\nnode_modules/.bin/md-code README-broken.md\nInserting code into markdown:\n    README-broken.md\ncode-in-markdown succeeded.\n"
        },
        "single file check should pass after update": {
            "dir": "code-in-markdown",
            "exitCode": 0,
            "key": "single file check should pass after update",
            "stderr": "",
            "stdout": "Installing markdown-code-example-inserter@0.1.11...\nrunning code-in-markdown...\nnode_modules/.bin/md-code --check README-broken.md\nChecking that code in markdown is up to date:\n    README-broken.md: up to date\ncode-in-markdown succeeded.\n"
        },
        "single file check should fail after reverting": {
            "dir": "code-in-markdown",
            "exitCode": 1,
            "key": "single file check should fail after reverting",
            "stderr": "    README-broken.md: NOT up to date\nCode in Markdown file(s) is out of date. Run without the \"check\" sub-command in order to update.\ncode-in-markdown failed.\n",
            "stdout": "Installing markdown-code-example-inserter@0.1.11...\nrunning code-in-markdown...\nnode_modules/.bin/md-code --check README-broken.md\nChecking that code in markdown is up to date:\n"
        }
    },
    "compile": {
        "compile-errors-failure": {
            "dir": "compile",
            "exitCode": 1,
            "key": "compile-errors-failure",
            "stderr": "compile failed.\n",
            "stdout": "Installing typescript@4.8.3...\nrunning compile...\nnode_modules/.bin/tsc --pretty --noEmit\nbad-blah.ts:2:18 - error TS2448: Block-scoped variable 'derp' used before its declaration.\n\n2     console.info(derp);\n                   ~~~~\n\n  bad-blah.ts:3:11\n    3     const derp = 'hello';\n                ~~~~\n    'derp' is declared here.\n\nbad-blah.ts:2:18 - error TS2454: Variable 'derp' is used before being assigned.\n\n2     console.info(derp);\n                   ~~~~\n\n\nFound 2 errors in the same file, starting at: bad-blah.ts:2\n\n"
        },
        "no-compile-errors-pass": {
            "dir": "compile",
            "exitCode": 0,
            "key": "no-compile-errors-pass",
            "stderr": "",
            "stdout": "Installing typescript@4.8.3...\nrunning compile...\nnode_modules/.bin/tsc --pretty --noEmit\ncompile succeeded.\n"
        },
        "compile-no-errors-with-output": {
            "dir": "compile",
            "exitCode": 0,
            "key": "compile-no-errors-with-output",
            "stderr": "",
            "stdout": "Installing typescript@4.8.3...\nrunning compile...\nrm -rf dist && ./test-files/compile/valid-compile-repo/node_modules/.bin/tsc --pretty\ncompile succeeded.\n"
        }
    },
    "format": {
        "fail on format failures in a folder": {
            "dir": "format",
            "exitCode": 1,
            "key": "fail on format failures in a folder",
            "stderr": "[warn] invalid-format.ts\n[warn] Code style issues found in the above file. Forgot to run Prettier?\nformat failed.\n",
            "stdout": "Installing prettier@2.7.1...\nInstalling prettier-plugin-jsdoc@0.4.2...\nInstalling prettier-plugin-multiline-arrays@1.1.1...\nInstalling prettier-plugin-organize-imports@3.1.1...\nInstalling prettier-plugin-packagejson@2.2.18...\nInstalling prettier-plugin-sort-json@0.0.3...\nInstalling prettier-plugin-toml@0.3.1...\nrunning format...\nSuccessfully copied .prettierignore\nSuccessfully copied .prettierrc.js\nnode_modules/.bin/prettier --color \"./**/*.+(css|html|js|json|jsx|md|toml|ts|tsx|yaml|yml)\" --check \n"
        },
        "pass format when there are zero errors": {
            "dir": "format",
            "exitCode": 0,
            "key": "pass format when there are zero errors",
            "stderr": "",
            "stdout": "Installing prettier@2.7.1...\nInstalling prettier-plugin-jsdoc@0.4.2...\nInstalling prettier-plugin-multiline-arrays@1.1.1...\nInstalling prettier-plugin-organize-imports@3.1.1...\nInstalling prettier-plugin-packagejson@2.2.18...\nInstalling prettier-plugin-sort-json@0.0.3...\nInstalling prettier-plugin-toml@0.3.1...\nrunning format...\nSuccessfully copied .prettierignore\nSuccessfully copied .prettierrc.js\nnode_modules/.bin/prettier --color \"./**/*.+(css|html|js|json|jsx|md|toml|ts|tsx|yaml|yml)\" --check \nformat succeeded.\n"
        },
        "format should update invalid files": {
            "dir": "format",
            "exitCode": 0,
            "key": "format should update invalid files",
            "stderr": "",
            "stdout": "Installing prettier@2.7.1...\nInstalling prettier-plugin-jsdoc@0.4.2...\nInstalling prettier-plugin-multiline-arrays@1.1.1...\nInstalling prettier-plugin-organize-imports@3.1.1...\nInstalling prettier-plugin-packagejson@2.2.18...\nInstalling prettier-plugin-sort-json@0.0.3...\nInstalling prettier-plugin-toml@0.3.1...\nrunning format...\nSuccessfully copied .prettierignore\nSuccessfully copied .prettierrc.js\nnode_modules/.bin/prettier --color --list-different \"./**/*.+(css|html|js|json|jsx|md|toml|ts|tsx|yaml|yml)\" --write\ninvalid-format.ts\nformat succeeded.\n"
        }
    },
    "spellcheck": {
        "typos-exist": {
            "dir": "spellcheck",
            "exitCode": 1,
            "key": "typos-exist",
            "stderr": "CSpell: Files checked: 3, Issues found: 2 in 1 files\nspellcheck failed.\n",
            "stdout": "Installing cspell@6.10.1...\nrunning spellcheck...\nSuccessfully copied cspell.config.js\nnode_modules/.bin/cspell --config cspell.config.js --color --unique --no-progress --relative --dot \"**/*\"\n./stuff.js:1:12 - Unknown word (Stff)\n./stuff.js:2:25 - Unknown word (thre)\n"
        },
        "no-typos": {
            "dir": "spellcheck",
            "exitCode": 0,
            "key": "no-typos",
            "stderr": "CSpell: Files checked: 3, Issues found: 0 in 0 files\n",
            "stdout": "Installing cspell@6.10.1...\nrunning spellcheck...\nSuccessfully copied cspell.config.js\nnode_modules/.bin/cspell --config cspell.config.js --color --unique --no-progress --relative --dot \"**/*\"\nspellcheck succeeded.\n"
        },
        "dot-files": {
            "dir": "spellcheck",
            "exitCode": 0,
            "key": "dot-files",
            "stderr": "CSpell: Files checked: 12, Issues found: 0 in 0 files\n",
            "stdout": "Installing cspell@6.10.1...\nrunning spellcheck...\nSuccessfully copied cspell.config.js\nnode_modules/.bin/cspell --config cspell.config.js --color --unique --no-progress --relative --dot \"**/*\"\nspellcheck succeeded.\n"
        }
    },
    "init": {
        "init with files to upgrade": {
            "dir": "init",
            "exitCode": 0,
            "key": "init with files to upgrade",
            "stderr": "",
            "stdout": "Installing prettier@2.7.1...\nInstalling prettier-plugin-jsdoc@0.4.2...\nInstalling prettier-plugin-multiline-arrays@1.1.1...\nInstalling prettier-plugin-organize-imports@3.1.1...\nInstalling prettier-plugin-packagejson@2.2.18...\nInstalling prettier-plugin-sort-json@0.0.3...\nInstalling prettier-plugin-toml@0.3.1...\nrunning init...\nSuccessfully copied .gitattributes\nSuccessfully copied .gitignore\nSuccessfully copied .mocharc.js\nSuccessfully copied .npmignore\nSuccessfully copied .nvmrc\nSuccessfully copied .prettierignore\nSuccessfully copied .prettierrc.js\nSuccessfully copied cspell.config.js\nSuccessfully copied package.json\nSuccessfully copied settings.json\nSuccessfully copied tsconfig.json\nSuccessfully copied vite.config.ts\nSuccessfully copied web-test-runner.config.mjs\ninit succeeded.\n"
        },
        "basic-init": {
            "dir": "init",
            "exitCode": 0,
            "key": "basic-init",
            "stderr": "",
            "stdout": "Installing prettier@2.7.1...\nInstalling prettier-plugin-jsdoc@0.4.2...\nInstalling prettier-plugin-multiline-arrays@1.1.1...\nInstalling prettier-plugin-organize-imports@3.1.1...\nInstalling prettier-plugin-packagejson@2.2.18...\nInstalling prettier-plugin-sort-json@0.0.3...\nInstalling prettier-plugin-toml@0.3.1...\nrunning init...\nSuccessfully copied .gitattributes\nSuccessfully copied .gitignore\nSuccessfully copied .mocharc.js\nSuccessfully copied .npmignore\nSuccessfully copied .nvmrc\nSuccessfully copied .prettierignore\nSuccessfully copied .prettierrc.js\nSuccessfully copied cspell.config.js\nSuccessfully copied package.json\nSuccessfully copied settings.json\nSuccessfully copied tsconfig.json\nSuccessfully copied vite.config.ts\nSuccessfully copied web-test-runner.config.mjs\ninit succeeded.\n"
        }
    },
    "test": {
        "failing-tests": {
            "dir": "test",
            "exitCode": 1,
            "key": "failing-tests",
            "stderr": "test failed.\n",
            "stdout": "Installing @types/chai@4.3.3...\nInstalling @types/mocha@9.1.1...\nInstalling chai@4.3.6...\nInstalling mocha@10.0.0...\nInstalling ts-node@10.9.1...\nrunning test...\nSuccessfully copied .mocharc.js\nnode_modules/.bin/mocha --config configs/.mocharc.js  --jobs 1  0 passing \n  1 failing\n\n  1) invalid.test.ts\n       should have a failing test:\n\n      this should fail\n      + expected - actual\n\n      -false\n      +true\n      \n      at Context.<anonymous> (src/invalid.test.ts:6:16)\n      at processImmediate (node:internal/timers:466:21)\n\n\n\n"
        },
        "serial tests": {
            "dir": "test",
            "exitCode": 0,
            "key": "serial tests",
            "stderr": "",
            "stdout": "Installing @types/chai@4.3.3...\nInstalling @types/mocha@9.1.1...\nInstalling chai@4.3.6...\nInstalling mocha@10.0.0...\nInstalling ts-node@10.9.1...\nrunning test...\nSuccessfully copied .mocharc.js\nnode_modules/.bin/mocha --config configs/.mocharc.js  --jobs 1\n\n\n  first.test.ts\n    ✔ should take a while to run \n\n  second.test.ts\n    ✔ should take a while to run \n\n\n  2 passing \n\ntest succeeded.\n"
        },
        "passing-tests": {
            "dir": "test",
            "exitCode": 0,
            "key": "passing-tests",
            "stderr": "",
            "stdout": "Installing @types/chai@4.3.3...\nInstalling @types/mocha@9.1.1...\nInstalling chai@4.3.6...\nInstalling mocha@10.0.0...\nInstalling ts-node@10.9.1...\nrunning test...\nSuccessfully copied .mocharc.js\nnode_modules/.bin/mocha --config configs/.mocharc.js  --jobs 1  1 passing \n\ntest succeeded.\n"
        },
        "all-tests": {
            "dir": "test",
            "exitCode": 1,
            "key": "all-tests",
            "stderr": "test failed.\n",
            "stdout": "Installing @types/chai@4.3.3...\nInstalling @types/mocha@9.1.1...\nInstalling chai@4.3.6...\nInstalling mocha@10.0.0...\nInstalling ts-node@10.9.1...\nrunning test...\nSuccessfully copied .mocharc.js\nnode_modules/.bin/mocha --config configs/.mocharc.js  --jobs 1  1 passing \n  1 failing\n\n  1) invalid.test.ts\n       should have a failing test:\n\n      AssertionError: expected false to be true\n      + expected - actual\n\n      -false\n      +true\n      \n      at Context.<anonymous> (src/invalid.test.ts:6:16)\n      at processImmediate (node:internal/timers:466:21)\n\n\n\n"
        }
    },
    "test-web": {
        "failing-test-web": {
            "dir": "test-web",
            "exitCode": 1,
            "key": "failing-test-web",
            "stderr": "test-web failed.",
            "stdout": "Installing @open-wc/testing@3.1.6... Installing @web/dev-server-esbuild@0.3.2... Installing @web/test-runner@0.14.0... Installing @web/test-runner-commands@0.6.5... Installing @web/test-runner-playwright@0.8.10... running test-web... Successfully copied web-test-runner.config.mjs node_modules/.bin/web-test-runner --color --config configs/web-test-runner.config.mjs Running tests... Running 1 test files... src/should-fail.test.ts: ❌ should fail test > should fail AssertionError: expected false to be true + expected - actual -false +true at o.<anonymous> (src/should-fail.test.ts:5:15) View full coverage report at coverage/lcov-report/index.html Finished running tests in with 3 failed tests."
        },
        "passing-test-web": {
            "dir": "test-web",
            "exitCode": 0,
            "key": "passing-test-web",
            "stderr": "",
            "stdout": "Installing @open-wc/testing@3.1.6... Installing @web/dev-server-esbuild@0.3.2... Installing @web/test-runner@0.14.0... Installing @web/test-runner-commands@0.6.5... Installing @web/test-runner-playwright@0.8.10... running test-web... Successfully copied web-test-runner.config.mjs node_modules/.bin/web-test-runner --color --config configs/web-test-runner.config.mjs Running tests... Running 1 test files... View full coverage report at coverage/lcov-report/index.html Finished running tests in , all tests passed! 🎉 test-web succeeded."
        }
    },
    "update-configs": {
        "updating-configs": {
            "dir": "update-configs",
            "exitCode": 0,
            "key": "updating-configs",
            "stderr": "",
            "stdout": "running update-configs...\nSuccessfully updated .gitignore\nSuccessfully updated .npmignore\nSuccessfully updated package.json\nSuccessfully updated settings.json\nupdate-configs succeeded.\n"
        },
        "not-updating-any-configs": {
            "dir": "update-configs",
            "exitCode": 0,
            "key": "not-updating-any-configs",
            "stderr": "",
            "stdout": "running update-configs...\nupdate-configs succeeded.\n"
        }
    }
}
